framework:
    messenger:
        failure_transport: failed_messages
        default_bus: none.bus
        buses:
            none.bus:
                default_middleware: allow_no_handlers
            command.bus:
                middleware:
                    - doctrine_ping_connection
                    - doctrine_close_connection
                    - doctrine_transaction
            query.bus:
                default_middleware: allow_no_handlers
                middleware:
                    - validation
            event.bus:
                default_middleware: allow_no_handlers
                middleware:
                    - validation
        transports:
            async_commands:
                dsn: '%env(MESSENGER_TRANSPORT_BASE_DSN)%/commands'
            sync_commands:
                dsn: 'sync://'
            events:
                dsn: '%env(MESSENGER_TRANSPORT_BASE_DSN)%/events'
            query:
                dsn: 'sync://'
            failed_messages:
                dsn: '%env(MESSENGER_TRANSPORT_BASE_DSN)%/failed-messages'
        routing:
            # Consider Signing up an Author is a sync command.
            # With a proper UX, almost all the commands should
            # be run asynchronously.
            Cheeper\Application\Command\Author\SignUp: sync_commands
            Cheeper\Chapter6\Application\Command\Author\Follow: async_commands

            # Domain Events are sent to asynchronous
            # transport to be processed later.
            Cheeper\DomainModel\Follow\AuthorFollowed: events
            Cheeper\DomainModel\Follow\AuthorUnfollowed: events

            # Queries are executed synchronously
            # in the same request that data is requested.
            Cheeper\Chapter5\Application\Query\Query: query